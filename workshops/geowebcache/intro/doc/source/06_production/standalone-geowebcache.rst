Standalone GeoWebCache
======================

We have already seen that GeoWebCache has certain advantages in its standalone deployment. This material has concentrated on the embedded version inside GeoServer, but we will conclude with a few comments on what to expect from using standalone GeoWebCache.

Configuration
-------------

Standalone GeoWebCache does not come with a graphical user interface that can be used to configure gridsets, layers, or other options. Besides providing feedback on the GeoWebCache instance, the GeoWebCache home page only allows for launching seed and truncate jobs.

Configuration of the standalone version requires either editing XML files or by using the REST API. It is not possible to transfer the configuration files generated by the embedded GeoWebCache to a standalone version and have the configuration replicated exactly.

There are a number of advanced options that are not exposed in the web interface, such as configuring 
custom bounds for a gridsubset. It is also possible to configure cached layers that are served by a different GeoServer instance.

WMS integration
---------------

Direct WMS integration is only available when using the embedded GeoWebCache. Integration allows for better handling of WMS since GeoWebCache will silently drop non-standard parameters and reject requests that do not align to gridsets. 

Full WMS
--------

A GeoWebCache instance configured with **full WMS** enabled is able to satisfy any generic WMS request, and not simply tile requests which correspond to a gridset. GeoWebCache accomplishes this by stitching together multiple tiles to compose the single requested image.

.. admonition:: Challenge

   Full WMS is one reason you might want to consider using GeoWebCache. What are some advantages and disadvantages to having full WMS?

   .. only:: instructor

      .. admonition:: Instructor Notes

         You should see a performance boost even without making requests that align to gridsets. On the other hand, clients will not be able to choose between regular WMS and WMS-C and this can cause problems if there is dynamic data or if the client wants to use non-essential request parameters.

WFS-T truncating
----------------

Standalone GeoWebCache does not allow you to truncate tiles from the cache when a feature is created, deleted, or updated using WFS-T.

Multiple instances
------------------

GeoWebCache
~~~~~~~~~~~

The standalone GeoWebCache is able to serve as a simple proxy for multiple GeoServer instances. 

GeoServer
~~~~~~~~~

It is possible to use a single directory to store tiles and configuration for several standalone GeoWebCache instances in a cluster.

GeoWebCache defaults to setting its tile locking mechanism to ``In-process locking`` as the means to ensure that two processes do not attempt to modify the tile cache at the same time. However, when two or more independent GeoWebCache instances are operating on the same cache directory, it is necessary to change the mechanism to filesystem based locking: ``NIO-based lock``. The :guilabel:`Tile locking mechanism` can be set in the :guilabel:`Caching Defaults` settings page in GeoServer.

Similarly, if disk quotas are enabled and two or more GeoWebCache instances will be using the same cache directory, it is important to change the disk quota store type (set on the :guilabel:`Disk Quota` page in GeoServer) to an external JDBC data store (either PostgreSQL or Oracle) to prevent inconsistencies.
